{
  "source": {
    "hash": "0xc23ce52250bebdc33f9cdad582e0484879d8602619bec6df4df1f54672f0807c",
    "language": "ink! 4.1.0",
    "compiler": "rustc 1.70.0-nightly",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "2.1.0",
      "rust_toolchain": "nightly-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "transfer",
    "version": "4.1.0",
    "authors": [
      "Parity Technologies <admin@parity.io>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [
          "Creates a new instance of this contract."
        ],
        "label": "new",
        "payable": true,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 0
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "events": [],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 2
    },
    "messages": [
      {
        "args": [
          {
            "label": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "docs": [
          " Transfers `value` amount of tokens to the caller.",
          "",
          " # Errors",
          "",
          " - Panics in case the requested transfer exceeds the contract balance.",
          " - Panics in case the requested transfer would have brought this",
          "   contract's balance below the minimum balance (i.e. the chain's",
          "   existential deposit).",
          " - Panics in case the transfer failed for another reason."
        ],
        "label": "give_me",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 0
        },
        "selector": "0x499bb739"
      },
      {
        "args": [],
        "docs": [
          " Asserts that the token amount sent as payment with this call",
          " is exactly `10`. This method will fail otherwise, and the",
          " transaction would then be reverted.",
          "",
          " # Note",
          "",
          " The method needs to be annotated with `payable`; only then it is",
          " allowed to receive value as part of the call."
        ],
        "label": "was_it_ten",
        "mutates": false,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 0
        },
        "selector": "0xcafebabe"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [],
          "name": "GiveMe"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 2
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    }
  ],
  "version": "4"
}